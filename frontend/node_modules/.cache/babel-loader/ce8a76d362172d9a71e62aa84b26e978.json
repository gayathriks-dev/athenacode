{"ast":null,"code":"var _jsxFileName = \"/Users/gayathriks/Downloads/c1/healthcare-app/frontend/src/components/Visualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualization = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/visualize/${id}`); // Adjust URL based on your Flask backend URL\n        if (response.ok) {\n          const result = await response.json();\n          setData(result.visualization_data);\n        } else {\n          console.error('Failed to fetch visualization data');\n        }\n      } catch (error) {\n        console.error('Error fetching visualization data:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Visualization for Patient \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualization\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Placeholder for visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualization, \"wBe20EtF3msngsy/cmazMRH810g=\", false, function () {\n  return [useParams];\n});\n_c = Visualization;\nexport default Visualization;\nvar _c;\n$RefreshReg$(_c, \"Visualization\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Visualization","_s","id","data","setData","fetchData","response","fetch","ok","result","json","visualization_data","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/gayathriks/Downloads/c1/healthcare-app/frontend/src/components/Visualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Visualization = () => {\n  const { id } = useParams();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/visualize/${id}`); // Adjust URL based on your Flask backend URL\n        if (response.ok) {\n          const result = await response.json();\n          setData(result.visualization_data);\n        } else {\n          console.error('Failed to fetch visualization data');\n        }\n      } catch (error) {\n        console.error('Error fetching visualization data:', error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  return (\n    <div>\n      <h1>Visualization for Patient {id}</h1>\n      <div id=\"visualization\">\n        {/* Render visualization data here */}\n        <p>Placeholder for visualization</p>\n        {/* Example: Render data as JSON */}\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default Visualization;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCL,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3E,IAAII,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACpCN,OAAO,CAACK,MAAM,CAACE,kBAAkB,CAAC;QACpC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACrD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAI,4BAA0B,EAACZ,EAAE;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvCnB,OAAA;MAAKG,EAAE,EAAC,eAAe;MAAAY,QAAA,gBAErBf,OAAA;QAAAe,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEpCnB,OAAA;QAAAe,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACjB,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,aAAa;EAAA,QACFH,SAAS;AAAA;AAAAwB,EAAA,GADpBrB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}